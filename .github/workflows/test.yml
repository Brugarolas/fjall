name: CI

on:
  #  TODO: remove
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    strategy:
      matrix:
        rust_version:
          - stable
          - "1.70.0"
        os:
          - ubuntu-latest
          #- windows-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_version }}
      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ runner.os }}-cargo
          workspaces: >
            . -> target
            examples/actix-kv -> target
            examples/actix-triplestore -> target
      - name: Build
        run: cargo build -v
      - name: Format
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy
      - name: Run tests
        run: cargo test -v -- --nocapture
      - name: Build KV example
        run: cargo build
        working-directory: examples/actix-kv
      - name: Test KV example
        run: cargo test
        working-directory: examples/actix-kv
      - name: Build triplestore example
        run: cargo build
        working-directory: examples/actix-triplestore
      - name: Test triplestore example
        run: cargo test
        working-directory: examples/actix-triplestore
  cross:
    name: cross
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-linux-android
          - aarch64-unknown-linux-musl
          - i686-linux-android
          - x86_64-linux-android
          - i686-unknown-linux-gnu
          - powerpc64-unknown-linux-gnu
          #- mips64-unknown-linux-gnuabi64
          - riscv64gc-unknown-linux-gnu
          #- x86_64-apple-darwin
          #- aarch64-apple-darwin
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: cross build --target ${{ matrix.target }}
        run: |
          cargo install cross
          cross build --target ${{ matrix.target }}
      